services:
  server:
    build:
      context: .
      dockerfile: build/Dockerfile
      target: final
      args:
        VERSION: ${VERSION:-dev}
        COMMIT: ${COMMIT:-none}
        DATE: ${DATE:-1970-01-01T00:00:00Z}
    image: broadcast-server:${VERSION:-dev}
    container_name: broadcast-server
    command: ["start","--port","8080"]
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-info}
      MSG_MAX_BYTES: ${MSG_MAX_BYTES:-4096}
      SEND_BUFFER: ${SEND_BUFFER:-64}
      PING_INTERVAL: ${PING_INTERVAL:-20s}
      AUTH_TOKEN: ${AUTH_TOKEN:-}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
    ports:
      - "8080:8080"
    restart: unless-stopped
    stop_grace_period: 10s

  server-alpine:
    profiles: ["alpine"]
    build:
      context: .
      dockerfile: build/Dockerfile
      target: alpine
      args:
        VERSION: ${VERSION:-dev}
        COMMIT: ${COMMIT:-none}
        DATE: ${DATE:-1970-01-01T00:00:00Z}
    image: broadcast-server:${VERSION:-dev}-alpine
    container_name: broadcast-server-alpine
    command: ["start","--port","8080"]
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-info}
      MSG_MAX_BYTES: ${MSG_MAX_BYTES:-4096}
      SEND_BUFFER: ${SEND_BUFFER:-64}
      PING_INTERVAL: ${PING_INTERVAL:-20s}
      AUTH_TOKEN: ${AUTH_TOKEN:-}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://127.0.0.1:8080/healthz"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s
    stop_grace_period: 10s
